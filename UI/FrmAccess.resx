<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAKCgAAAEAIABoGgAAFgAAACgAAAAoAAAAUAAAAAEAIAAAAAAAABkAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbWK0AHlwugBDNJ4AKxqRACcWjwAoFo8AKBaPACgW
        jwAnFo8AKhmRAEEynQBzabcAZluwAHFntgBaTaoAV0qoAFdLqABXS6gAV0uoAGNYrwD///8AoZvPAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdWu4AIR9wAA4KJgACAB/AAAAeQAAAHkAAAB5AAEA
        ewAtHJIAY1euAHBmtQChm88DTD6iN0EznWJAMpxmQDKcZkAynGZAMpxmQDKcZkEznWNLPaI6j4jGBFxQ
        qwCIgMIFWU2pHldKqCRXS6gjV0uoI1dKqCNmW7AQCgCAAAAAAAD///8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIF4vgCkn9ECSTuhQj4um34+LpuCPi6bgj4um4I9LpuBRDaeVmtgswkAAD0AQjOdaC4e
        k+0qGZH/KhmR/yoZkf8qGZH/KhmR/yoZkf8qGZH/Lh2T70AxnHCFfcAKPCyajTAglOEwH5PlMB+T5TAf
        k+UvH5PlNSWWwk1AozE9LpoA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABENp4ATUCjNDAf
        lOYpGJD/KRiQ/ykYkP8pGJD/KRiQ/y0ckvhDNJ5cfna9DDMjlcwoF4//KBeQ/ygXkP8oF5D/KBeQ/ygX
        kP8oF5D/KBeQ/ygWj/8yIZXRV0uoPy4ek+soFo//KBeP/ygXj/8oF4//KBeP/ykYkP8+L5t/BQB9AP//
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANSaXAEQ1nlMrGpH9KBeQ/ygXkP8oF5D/KBeQ/ygX
        kP8pGJD/Oyyag3FothIxIJTVKBeP/ygXkP8oF5D/KBeQ/ygXkP8oF5D/KBeQ/ygXkP8oF4//MCCU2VRH
        pkstHZLsKBeQ/ygXkP8oF5D/KBeQ/ygXkP8pGJD/PC2ahgAAdAD///8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADUllgBENp5TKxqR/CgXkP8oF5D/KBeQ/ygXkP8oF5D/KRiQ/zssmoJxaLYSMSCU1SgX
        j/8oF5D/KBeQ/ygXkP8oF5D/KBeQ/ygXkP8oF5D/KBeP/zAglNlUR6dKLR2S7CgXkP8oF5D/KBeQ/ygX
        kP8oF5D/KRiQ/zwtmoUAAHQA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1JZYARDaeUyoZ
        kfwmFZD/KBaP/ygXkP8oF5D/KBeQ/ykYkP87LJqCcWi2EjEglNUoF4//KBeQ/ygXkP8oF5D/KBeQ/ygX
        kP8oF5D/KBeQ/ygXj/8wIJTZVEenSi0dkuwoF4//KBeQ/ygXkP8oF5D/KBeQ/ykYkP88LZqFAAB0AP//
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8AMyOWAEAynVM2Jpf8a1yk/zoqmP8nFY//KBeQ/ygX
        kP8pGJD/OyyagnFothIxIJTVKBaP/yYVj/8oFo//KBeQ/ygXkP8oF5D/KBeQ/ygXkP8oF4//MCCU2VRH
        pkotHZLsKBeQ/ygXkP8oF5D/KBeQ/ygXkP8pGJD/PC2ahQEAewDCwOAAtLDZAAAAAAAAAAAAAAAAAAAA
        AAB1bLgAWlCuAG5irwBgVbFSiHWW/LCOXf+Peo7/OCiY/ycVj/8oF5D/KRiQ/zssmoF1bbkPMCCU1Csa
        kv9aTKP/OSmX/ycVj/8oF5D/KBeQ/ygXkP8oF5D/KBeP/zIhldpXSqhPLh2S7CgXkP8oF5D/KBeQ/ygX
        kP8oF5D/KRiQ/z4vm4n///8BDQCBAImCwwB+dr0AAAAAAAAAAAAAAAAAXFGtACYcoAKYlNcfxrKdmaqG
        T/+hdzT/qYJG/456kP83J5j/JxWP/ykYkP88LZqXXFGrNTcnmdluXZz/r5Fs/455j/83J5j/JxWP/ygX
        kP8oF5D/KBeQ/y4dk/81Jpf1NSWYzSoZk/onFpH/KBaQ/ygXkP8oF5D/JxaQ/ygXkv8wIJfeNiaYr0Y3
        n1P7//8BhHzAAAAAAAAAAAAAAAAAANfArQBYTKxmmIWb4KyHTv2hdzX/ong3/6J3Nf+pg0f/jnmQ/zYn
        mP8nFY//LBuS9S4elOhTQ5r5poZh/6J4NP+qg0j/jXmS/zYmmP8nFo//KBeQ/ykYkP8xIZT/QDGb/3lm
        lP97ZID/cFuL/zYllP8nFo//JxWQ/0Qzlf94Yob/e2SB/29em/89LpvYVkqoGVxQqwAAAAAAAAAAAAAA
        AADFxPAVoo+czKeDT/+idzX/ong3/6J3Nv+ieDf/onc1/6qDSP+NeZL/NiaY/ycVj/8nFpD/OSaJ/5Vv
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUUSlAFZKqB8yIpXRKBeQ/ygXkP8oF5D/KBeQ/ygX
        kP8xIZT/LRyS/ygXkP8oF5D/KBeQ/ygXkP8oF5D/KBeQ/ygXkP8oF4//KRiR/2VVnv+pimf/pHo1/5Br
        S/80Ioz/KBaQ/ygXkP8oF5D/KBeQ/ygXkP8sG5H6RjifSjormQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADMjlQBENZ5WKxqR/SgXkP8oF5D/KBeQ/ygXkP8oF5D/LBuR/zAglP8oF5D/KBeQ/ygX
        kP8oF5D/KBeQ/ygXkP8oF5D/KBeQ/ygXkP8oF5H/Y1Oe/6qLaP+Ub0j/NySJ/ycWkP8oF5D/KBeQ/ygX
        kP8oF5D/LByS90g6oEI+L5sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3J5cARTefTysb
        kfsoF5D/KBeQ/ygXkP8oF5D/KBeQ/ywbkv8wIJT/KBaP/ygXkP8oF5D/KBeP/ygXkP8oF5D/KBeQ/ygX
        kP8oF5D/KBaP/ycWkf9gUJ7/p4lu/2lQd/8rGpL/KBeP/ygXj/8oF4//KhiQ/zcomKxpXrIOYFStAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWUypAF9UrRQ1JZe8KRiQ/ygXj/8oF5D/KBeP/ykY
        kP84KJjdMyOV5C0cku4tHZLuLR2S7i0dku4tHZLuLRyS7S0ckuwtHJLtLR2S7i0dku4tHJLuLByT7mhY
        oe6KeqTmQjSeujIilcwvH5PjMSGU0zssmotZTKkaQTOdAEI0nQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAB0LigA0JJYAU0amJTkpmJ0wH5PgLR2S7jAflN46KpmVWUypJlNGpiRMP6MxTD+jMUw/
        ozBPQqQtVEinNVNGpkVSRqZLU0enP1NGpjBNQKMuTD+jMEs+ojFKPqYxXVO0J3lwuglkWa8SVkmoIl9U
        rRX///8ATT+jACgXkADNy+YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0sNkAAABvAEQ1
        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
        AAA=
</value>
  </data>
</root>